Activity: "Responsive Travel Guide with Live Location & Offline Access"

Time: 60 Minutes

Objective:

Build a responsive travel guide website that allows users to explore tourist destinations, view an interactive map, and access stored travel recommendations even when offline. The project should demonstrate the participants' ability to use Flexbox, Media Queries, Geolocation API, Web Storage, and Google Maps API effectively.

Activity Overview:

Participants will create a "Travel Guide" website where users can:

View travel recommendations in a well-structured, responsive layout.

See their current location on a Google Map using the Geolocation API.

Retrieve and store user preferences using Web Storage (LocalStorage).

Ensure offline availability for the travel guide using the Cache API.

Project Requirements:

1. Responsive UI Design (Flexbox & Media Queries)

The website should have a flexible layout that adapts to different screen sizes (desktop, tablet, mobile).

Use Flexbox to structure sections like the navbar, content area, and footer.

Implement Media Queries to adjust styles based on the screen width.


2. Location-Based Features (Geolocation API)

Use Modernizr to check if the user's browser supports Geolocation.

If supported, retrieve the latitude and longitude of the user.

Display the user's location on a Google Map.

Provide a button to refresh the location in real-time.

Explain privacy concerns and request user permission before accessing location data.


3. Google Maps Integration

Load the Google Maps API dynamically.

Mark the userâ€™s current location with a pin/marker.

Allow users to search for popular places near them (restaurants, attractions).


4. Web Storage (Offline Access & Preferences)

Save user preferences (favorite destinations, last viewed locations) in LocalStorage.

Display previously saved locations when the user revisits the site.


5. Offline Web App Support (Cache API)

Implement offline support using the Service Worker and Cache API.

Ensure users can still view saved travel guides even if they lose internet connectivity.




<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Responsive Travel Guide</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <header>
    <nav class="navbar">
      <h1>Travel Guide</h1>
      <button id="refresh-location">Refresh Location</button>
    </nav>
  </header>

  <main>
    <section id="travel-recommendations">
      <h2>Your Travel Recommendations</h2>
      <ul id="recommendation-list">
        <li>Explore New York City</li>
        <li>Visit the Great Wall of China</li>
        <li>Tour the Eiffel Tower</li>
      </ul>
    </section>

    <section id="map-container">
      <h2>Your Location</h2>
      <div id="map"></div>
    </section>

    <section id="saved-preferences">
      <h3>Your Saved Preferences</h3>
      <ul id="favorites-list"></ul>
    </section>
  </main>

  <footer>
    <p>&copy; 2025 Travel Guide | All Rights Reserved</p>
  </footer>

  <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_GOOGLE_MAPS_API_KEY&callback=initMap" async defer></script>
  <script src="scripts.js"></script>
</body>
</html>



* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  body {
    font-family: Arial, sans-serif;
    line-height: 1.6;
    padding: 20px;
  }
  
  header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #333;
    color: white;
    padding: 10px;
  }
  
  .navbar h1 {
    font-size: 1.5rem;
  }
  
  #map-container {
    margin-top: 20px;
  }
  
  #map {
    width: 100%;
    height: 400px;
    border: 1px solid #ccc;
  }
  
  #travel-recommendations, #saved-preferences {
    margin-top: 20px;
  }
  
  ul {
    list-style-type: none;
  }
  
  li {
    margin: 10px 0;
  }
  
  footer {
    margin-top: 40px;
    text-align: center;
    font-size: 0.9rem;
    color: #555;
  }
  
  /* Flexbox Layout */
  main {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }
  
  /* Media Queries for responsive design */
  @media (max-width: 768px) {
    main {
      padding: 0;
    }
  
    .navbar {
      flex-direction: column;
      text-align: center;
    }
  
    #map {
      height: 300px;
    }
  }



let map;
let userLocation = { lat: 0, lng: 0 };

function initMap() {
  const defaultLocation = { lat: 40.7128, lng: -74.0060 };

  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(
      (position) => {
        userLocation = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        displayMap(userLocation.lat, userLocation.lng);
      },
      (error) => {
        alert('Geolocation failed. Displaying default location.');
        displayMap(defaultLocation.lat, defaultLocation.lng);
      }
    );
  } else {
    alert("Geolocation is not supported by this browser.");
    displayMap(defaultLocation.lat, defaultLocation.lng);
  }
}

function displayMap(lat, lng) {
  const userPos = { lat, lng };

  map = new google.maps.Map(document.getElementById('map'), {
    center: userPos,
    zoom: 15
  });

  const marker = new google.maps.Marker({
    position: userPos,
    map: map,
    title: "You are here!"
  });

  document.getElementById('refresh-location').addEventListener('click', function () {
    navigator.geolocation.getCurrentPosition(
      (position) => {
        userLocation = { lat: position.coords.latitude, lng: position.coords.longitude };
        map.setCenter(userLocation);
        marker.setPosition(userLocation);
      },
      (error) => alert("Error getting location.")
    );
  });
}

function savePreferences() {
  const favorites = ["New York City", "Great Wall of China", "Eiffel Tower"];
  localStorage.setItem("favorites", JSON.stringify(favorites));
}

function displaySavedPreferences() {
  const savedFavorites = JSON.parse(localStorage.getItem("favorites"));
  const favoritesList = document.getElementById('favorites-list');
  
  if (savedFavorites) {
    savedFavorites.forEach(fav => {
      const li = document.createElement('li');
      li.textContent = fav;
      favoritesList.appendChild(li);
    });
  } else {
    favoritesList.innerHTML = "<li>No saved preferences</li>";
  }
}

savePreferences();

window.onload = displaySavedPreferences;

if ('serviceWorker' in navigator) {
  navigator.serviceWorker.register('/service-worker.js').then((registration) => {
    console.log('Service Worker registered with scope:', registration.scope);
  }).catch((error) => {
    console.log('Service Worker registration failed:', error);
  });
}



const CACHE_NAME = 'travel-guide-cache-v1';
const URLS_TO_CACHE = [
  '/',
  '/index.html',
  '/styles.css',
  '/scripts.js',
  '/images/logo.png',
];

self.addEventListener('install', (event) => {
  event.waitUntil(
    caches.open(CACHE_NAME).then((cache) => {
      return cache.addAll(URLS_TO_CACHE);
    })
  );
});

self.addEventListener('activate', (event) => {
  const cacheWhitelist = [CACHE_NAME];
  event.waitUntil(
    caches.keys().then((cacheNames) => {
      return Promise.all(
        cacheNames.map((cacheName) => {
          if (!cacheWhitelist.includes(cacheName)) {
            return caches.delete(cacheName);
          }
        })
      );
    })
  );
});

self.addEventListener('fetch', (event) => {
  event.respondWith(
    caches.match(event.request).then((response) => {
      return response || fetch(event.request);
    })
  );
});


